FUNCTION ZFM_MM_011.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(I_SUB) TYPE  CHAR1 OPTIONAL
*"     VALUE(I_CON) TYPE  CHAR1 OPTIONAL
*"     VALUE(I_SAL) TYPE  CHAR1 OPTIONAL
*"     VALUE(I_CUS) TYPE  CHAR1 OPTIONAL
*"  TABLES
*"      T_WERKS STRUCTURE  SELOPT OPTIONAL
*"      T_MATNR STRUCTURE  SELOPT OPTIONAL
*"      T_LGORT STRUCTURE  SELOPT OPTIONAL
*"      T_MTART STRUCTURE  SELOPT OPTIONAL
*"      T_MATKL STRUCTURE  SELOPT OPTIONAL
*"      T_OUTPUT STRUCTURE  ZSMM_GI_ONHAND OPTIONAL
*"----------------------------------------------------------------------

  TABLES: MARA, MARC, MCHB, TCURR, TCURF, ZQMDTL, ZQMHDR.

  RANGES: I_WERKS  FOR AFPO-DWERK,
          I_MATNR  FOR AFPO-MATNR,
          I_LGORT  FOR AFKO-AUFNR,
          I_MTART  FOR AFPO-DAUAT,
          I_MATKL  FOR AFKO-GSTRP.
  DATA:   LW_WERKS TYPE SELOPT,
          LW_MATNR TYPE SELOPT,
          LW_LGORT TYPE SELOPT,
          LW_MTART TYPE SELOPT,
          LW_MATKL TYPE SELOPT.

  DATA: GR_TABLE TYPE REF TO DATA,
        GT_LINE  TYPE REF TO DATA.
  DATA: LW_OUTPUT LIKE LINE OF T_OUTPUT.

  FIELD-SYMBOLS: <GT_TABLE> TYPE STANDARD TABLE,
                 <GT_TLINE> TYPE ANY.

  LOOP AT T_WERKS INTO LW_WERKS.
    MOVE-CORRESPONDING LW_WERKS TO I_WERKS. APPEND I_WERKS.
  ENDLOOP.

  LOOP AT T_MATNR INTO LW_MATNR.
    MOVE-CORRESPONDING LW_MATNR TO I_MATNR. APPEND I_MATNR.
  ENDLOOP.

  LOOP AT T_LGORT INTO LW_LGORT.
    MOVE-CORRESPONDING LW_LGORT TO I_LGORT. APPEND I_LGORT.
  ENDLOOP.

  LOOP AT T_MTART INTO LW_MTART.
    MOVE-CORRESPONDING LW_MTART TO I_MTART. APPEND I_MTART.
  ENDLOOP.

  LOOP AT T_MATKL INTO LW_MATKL.
    MOVE-CORRESPONDING LW_MATKL TO I_MATKL. APPEND I_MATKL.
  ENDLOOP.

  CL_SALV_BS_RUNTIME_INFO=>SET(
    EXPORTING DISPLAY  = ABAP_FALSE
              METADATA = ABAP_FALSE
              DATA     = ABAP_TRUE ).

  SUBMIT ZREPT_GEI_ONHAND EXPORTING LIST TO MEMORY WITH S_WERKS IN I_WERKS
                                                   WITH S_MATNR IN I_MATNR
                                                   WITH S_LGORT IN I_LGORT
                                                   WITH S_MTART IN I_MTART
                                                   WITH S_MATKL IN I_MATKL
                                                   WITH P_SUB EQ I_SUB
                                                   WITH P_CON EQ I_CON
                                                   WITH P_SAL EQ I_SAL
                                                   WITH P_CUS EQ I_CUS
                                                   AND RETURN.

  TRY.
      CL_SALV_BS_RUNTIME_INFO=>GET_DATA_REF(
      IMPORTING R_DATA = GR_TABLE ).
      ASSIGN GR_TABLE->* TO <GT_TABLE>.
    CATCH CX_SALV_BS_SC_RUNTIME_INFO.
      MESSAGE: TEXT-M01 TYPE 'S' DISPLAY LIKE 'E'.
      LEAVE LIST-PROCESSING.
  ENDTRY.

  CL_SALV_BS_RUNTIME_INFO=>CLEAR_ALL( ).
  IF <GT_TABLE>[] IS ASSIGNED.
    LOOP AT <GT_TABLE> ASSIGNING <GT_TLINE>.
      MOVE-CORRESPONDING <GT_TLINE> TO LW_OUTPUT.
      APPEND LW_OUTPUT TO T_OUTPUT.
      CLEAR: LW_OUTPUT.
    ENDLOOP.
  ENDIF.

ENDFUNCTION.
